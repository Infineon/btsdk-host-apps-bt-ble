/*
 * Copyright 2016-2021, Cypress Semiconductor Corporation (an Infineon company) or
 * an affiliate of Cypress Semiconductor Corporation.  All rights reserved.
 *
 * This software, including source code, documentation and related
 * materials ("Software") is owned by Cypress Semiconductor Corporation
 * or one of its affiliates ("Cypress") and is protected by and subject to
 * worldwide patent protection (United States and foreign),
 * United States copyright laws and international treaty provisions.
 * Therefore, you may use this Software only as provided in the license
 * agreement accompanying the software package from which you
 * obtained this Software ("EULA").
 * If no EULA applies, Cypress hereby grants you a personal, non-exclusive,
 * non-transferable license to copy, modify, and compile the Software
 * source code solely for use in connection with Cypress's
 * integrated circuit products.  Any reproduction, modification, translation,
 * compilation, or representation of this Software except as specified
 * above is prohibited without the express written permission of Cypress.
 *
 * Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. Cypress
 * reserves the right to make changes to the Software without notice. Cypress
 * does not assume any liability arising out of the application or use of the
 * Software or any product or circuit described in the Software. Cypress does
 * not authorize its products for use in any products where a malfunction or
 * failure of the Cypress product may reasonably be expected to result in
 * significant property damage, injury or death ("High Risk Product"). By
 * including Cypress's product in a High Risk Product, the manufacturer
 * of such system or application assumes all risk of such use and in doing
 * so agrees to indemnify Cypress against all liability.
 */
/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9 at Wed Oct 31 16:42:06 2018. */

#ifndef PB_PROTOBUF_WICED_HCI_SPP_WICED_HCI_SPP_PB_H_INCLUDED
#define PB_PROTOBUF_WICED_HCI_SPP_WICED_HCI_SPP_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _protobuf_WICED_HCI_SPP_EVENT {
    protobuf_WICED_HCI_SPP_EVENT_EVT_NONE = 0,
    protobuf_WICED_HCI_SPP_EVENT_EVT_CONNECTED = 1,
    protobuf_WICED_HCI_SPP_EVENT_EVT_CONNECT_FAILED = 3,
    protobuf_WICED_HCI_SPP_EVENT_EVT_DISCONNECTED = 4,
    protobuf_WICED_HCI_SPP_EVENT_EVT_TX_DATA_CMPL = 5,
    protobuf_WICED_HCI_SPP_EVENT_EVT_RX_DATA_CMPL = 6,
    protobuf_WICED_HCI_SPP_EVENT_EVT_ANY = 10
} protobuf_WICED_HCI_SPP_EVENT;
#define _protobuf_WICED_HCI_SPP_EVENT_MIN protobuf_WICED_HCI_SPP_EVENT_EVT_NONE
#define _protobuf_WICED_HCI_SPP_EVENT_MAX protobuf_WICED_HCI_SPP_EVENT_EVT_ANY
#define _protobuf_WICED_HCI_SPP_EVENT_ARRAYSIZE ((protobuf_WICED_HCI_SPP_EVENT)(protobuf_WICED_HCI_SPP_EVENT_EVT_ANY+1))

/* Struct definitions */
typedef struct _protobuf_WICED_HCI_SPP_Connect {
    pb_callback_t bd_addr;
/* @@protoc_insertion_point(struct:protobuf_WICED_HCI_SPP_Connect) */
} protobuf_WICED_HCI_SPP_Connect;

typedef struct _protobuf_WICED_HCI_SPP_Disconnect {
    pb_callback_t bd_addr;
/* @@protoc_insertion_point(struct:protobuf_WICED_HCI_SPP_Disconnect) */
} protobuf_WICED_HCI_SPP_Disconnect;

typedef struct _protobuf_WICED_HCI_SPP_Remove {
    char dummy_field;
/* @@protoc_insertion_point(struct:protobuf_WICED_HCI_SPP_Remove) */
} protobuf_WICED_HCI_SPP_Remove;

typedef struct _protobuf_WICED_HCI_SPP_SendData {
    pb_callback_t bd_addr;
    pb_callback_t data;
/* @@protoc_insertion_point(struct:protobuf_WICED_HCI_SPP_SendData) */
} protobuf_WICED_HCI_SPP_SendData;

typedef struct _protobuf_WICED_HCI_SPP_CONNECTED_PARAMS {
    uint32_t wait_status;
    bool is_connected;
    uint32_t port_handle;
/* @@protoc_insertion_point(struct:protobuf_WICED_HCI_SPP_CONNECTED_PARAMS) */
} protobuf_WICED_HCI_SPP_CONNECTED_PARAMS;

typedef struct _protobuf_WICED_HCI_SPP_DISCONNECTED_PARAMS {
    uint32_t wait_status;
    uint32_t port_handle;
/* @@protoc_insertion_point(struct:protobuf_WICED_HCI_SPP_DISCONNECTED_PARAMS) */
} protobuf_WICED_HCI_SPP_DISCONNECTED_PARAMS;

typedef struct _protobuf_WICED_HCI_SPP_EVENT_PARAMS {
    uint32_t rcvd_event;
    uint32_t is_connected;
    uint32_t port_handle;
    uint32_t data_len;
    pb_callback_t data;
/* @@protoc_insertion_point(struct:protobuf_WICED_HCI_SPP_EVENT_PARAMS) */
} protobuf_WICED_HCI_SPP_EVENT_PARAMS;

typedef struct _protobuf_WICED_HCI_SPP_Listen {
    pb_callback_t service_name;
    uint32_t mtu;
/* @@protoc_insertion_point(struct:protobuf_WICED_HCI_SPP_Listen) */
} protobuf_WICED_HCI_SPP_Listen;

typedef struct _protobuf_WICED_HCI_SPP_RX_DATA_PARAMS {
    uint32_t wait_status;
    uint32_t port_handle;
    uint32_t data_len;
    pb_callback_t data;
/* @@protoc_insertion_point(struct:protobuf_WICED_HCI_SPP_RX_DATA_PARAMS) */
} protobuf_WICED_HCI_SPP_RX_DATA_PARAMS;

typedef struct _protobuf_WICED_HCI_SPP_WaitEvent {
    uint32_t timeout;
    protobuf_WICED_HCI_SPP_EVENT wait_event;
/* @@protoc_insertion_point(struct:protobuf_WICED_HCI_SPP_WaitEvent) */
} protobuf_WICED_HCI_SPP_WaitEvent;

/* Default values for struct fields */

/* Initializer values for message structs */
#define protobuf_WICED_HCI_SPP_CONNECTED_PARAMS_init_default {0, 0, 0}
#define protobuf_WICED_HCI_SPP_DISCONNECTED_PARAMS_init_default {0, 0}
#define protobuf_WICED_HCI_SPP_RX_DATA_PARAMS_init_default {0, 0, 0, {{NULL}, NULL}}
#define protobuf_WICED_HCI_SPP_EVENT_PARAMS_init_default {0, 0, 0, 0, {{NULL}, NULL}}
#define protobuf_WICED_HCI_SPP_Listen_init_default {{{NULL}, NULL}, 0}
#define protobuf_WICED_HCI_SPP_Disconnect_init_default {{{NULL}, NULL}}
#define protobuf_WICED_HCI_SPP_Connect_init_default {{{NULL}, NULL}}
#define protobuf_WICED_HCI_SPP_SendData_init_default {{{NULL}, NULL}, {{NULL}, NULL}}
#define protobuf_WICED_HCI_SPP_Remove_init_default {0}
#define protobuf_WICED_HCI_SPP_WaitEvent_init_default {0, (protobuf_WICED_HCI_SPP_EVENT)0}
#define protobuf_WICED_HCI_SPP_CONNECTED_PARAMS_init_zero {0, 0, 0}
#define protobuf_WICED_HCI_SPP_DISCONNECTED_PARAMS_init_zero {0, 0}
#define protobuf_WICED_HCI_SPP_RX_DATA_PARAMS_init_zero {0, 0, 0, {{NULL}, NULL}}
#define protobuf_WICED_HCI_SPP_EVENT_PARAMS_init_zero {0, 0, 0, 0, {{NULL}, NULL}}
#define protobuf_WICED_HCI_SPP_Listen_init_zero  {{{NULL}, NULL}, 0}
#define protobuf_WICED_HCI_SPP_Disconnect_init_zero {{{NULL}, NULL}}
#define protobuf_WICED_HCI_SPP_Connect_init_zero {{{NULL}, NULL}}
#define protobuf_WICED_HCI_SPP_SendData_init_zero {{{NULL}, NULL}, {{NULL}, NULL}}
#define protobuf_WICED_HCI_SPP_Remove_init_zero  {0}
#define protobuf_WICED_HCI_SPP_WaitEvent_init_zero {0, (protobuf_WICED_HCI_SPP_EVENT)0}

/* Field tags (for use in manual encoding/decoding) */
#define protobuf_WICED_HCI_SPP_Connect_bd_addr_tag 1
#define protobuf_WICED_HCI_SPP_Disconnect_bd_addr_tag 1
#define protobuf_WICED_HCI_SPP_SendData_bd_addr_tag 1
#define protobuf_WICED_HCI_SPP_SendData_data_tag 2
#define protobuf_WICED_HCI_SPP_CONNECTED_PARAMS_wait_status_tag 1
#define protobuf_WICED_HCI_SPP_CONNECTED_PARAMS_is_connected_tag 2
#define protobuf_WICED_HCI_SPP_CONNECTED_PARAMS_port_handle_tag 3
#define protobuf_WICED_HCI_SPP_DISCONNECTED_PARAMS_wait_status_tag 1
#define protobuf_WICED_HCI_SPP_DISCONNECTED_PARAMS_port_handle_tag 2
#define protobuf_WICED_HCI_SPP_EVENT_PARAMS_rcvd_event_tag 1
#define protobuf_WICED_HCI_SPP_EVENT_PARAMS_is_connected_tag 2
#define protobuf_WICED_HCI_SPP_EVENT_PARAMS_port_handle_tag 3
#define protobuf_WICED_HCI_SPP_EVENT_PARAMS_data_len_tag 4
#define protobuf_WICED_HCI_SPP_EVENT_PARAMS_data_tag 5
#define protobuf_WICED_HCI_SPP_Listen_service_name_tag 1
#define protobuf_WICED_HCI_SPP_Listen_mtu_tag    2
#define protobuf_WICED_HCI_SPP_RX_DATA_PARAMS_wait_status_tag 1
#define protobuf_WICED_HCI_SPP_RX_DATA_PARAMS_port_handle_tag 2
#define protobuf_WICED_HCI_SPP_RX_DATA_PARAMS_data_len_tag 3
#define protobuf_WICED_HCI_SPP_RX_DATA_PARAMS_data_tag 4
#define protobuf_WICED_HCI_SPP_WaitEvent_timeout_tag 1
#define protobuf_WICED_HCI_SPP_WaitEvent_wait_event_tag 2

/* Struct field encoding specification for nanopb */
extern const pb_field_t protobuf_WICED_HCI_SPP_CONNECTED_PARAMS_fields[4];
extern const pb_field_t protobuf_WICED_HCI_SPP_DISCONNECTED_PARAMS_fields[3];
extern const pb_field_t protobuf_WICED_HCI_SPP_RX_DATA_PARAMS_fields[5];
extern const pb_field_t protobuf_WICED_HCI_SPP_EVENT_PARAMS_fields[6];
extern const pb_field_t protobuf_WICED_HCI_SPP_Listen_fields[3];
extern const pb_field_t protobuf_WICED_HCI_SPP_Disconnect_fields[2];
extern const pb_field_t protobuf_WICED_HCI_SPP_Connect_fields[2];
extern const pb_field_t protobuf_WICED_HCI_SPP_SendData_fields[3];
extern const pb_field_t protobuf_WICED_HCI_SPP_Remove_fields[1];
extern const pb_field_t protobuf_WICED_HCI_SPP_WaitEvent_fields[3];

/* Maximum encoded size of messages (where known) */
#define protobuf_WICED_HCI_SPP_CONNECTED_PARAMS_size 14
#define protobuf_WICED_HCI_SPP_DISCONNECTED_PARAMS_size 12
/* protobuf_WICED_HCI_SPP_RX_DATA_PARAMS_size depends on runtime parameters */
/* protobuf_WICED_HCI_SPP_EVENT_PARAMS_size depends on runtime parameters */
/* protobuf_WICED_HCI_SPP_Listen_size depends on runtime parameters */
/* protobuf_WICED_HCI_SPP_Disconnect_size depends on runtime parameters */
/* protobuf_WICED_HCI_SPP_Connect_size depends on runtime parameters */
/* protobuf_WICED_HCI_SPP_SendData_size depends on runtime parameters */
#define protobuf_WICED_HCI_SPP_Remove_size       0
#define protobuf_WICED_HCI_SPP_WaitEvent_size    8

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define WICED_HCI_SPP_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
